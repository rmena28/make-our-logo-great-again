{"version":3,"sources":["redux/types/UserTypes.ts","redux/types/GameTypes.ts","pages/home/Home.tsx","redux/actions/userActions.ts","redux/actions/gameActions.ts","components/card/Card.tsx","components/card-holder/CardHolder.tsx","components/list/List.tsx","images/zoovu-o.svg","images/zoovu-u.svg","images/zoovu-v.svg","images/zoovu-z.svg","components/game-container/GameContainer.tsx","hooks/useRandomSortedData.ts","components/modal/Modal.tsx","components/header/Header.tsx","pages/game/Game.tsx","redux/reducers/gameReducer.ts","redux/rootReducer.ts","redux/reducers/userReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["UserTypes","GameTypes","Home","history","useHistory","useState","inputValue","setInputValue","dispatch","useDispatch","className","type","onChange","event","currentValue","currentTarget","value","placeholder","onClick","userName","SET_USER","payload","push","setWrongPlacementPenalty","SET_WRONG_PLACEMENT","Card","containerInformation","onDragStart","draggable","onDragEnd","stopPropagation","image","logo","id","htmlId","alt","src","CardHolder","onItemDragged","containerRef","useRef","started","useSelector","state","game","ref","onDrop","sourceContainer","preventDefault","indexOf","JSON","parse","dataTransfer","getData","error","console","log","onDragOver","e","SET_START","clearData","setData","stringify","MemoizedCardHolder","React","memo","List","items","map","item","index","MemoizedList","GameContainer","gameEnded","source","setSource","destination","setDestination","useEffect","gameItemDataLogo","list","key","letterZ","letterO","letterV","letterU","sort","Math","random","useRandomSortedData","undefined","sourceList","setSourceList","filter","length","SET_GAME_ENDED","fromHtmlId","toHtmlId","fromOrigin","sourceIndex","findIndex","destinationIndex","destinationOldImage","newDestination","isCorrectPlacement","newSource","imageIndex","containerIndex","Modal","open","onClose","title","children","message","autoCloseTimeout","setAutoCloseTimeout","timeout","setTimeout","clearTimeout","modalRoot","document","getElementById","Header","name","user","wrongPlacement","time","setTime","timeInterval","setTimeInterval","interval","setInterval","currrent","clearInterval","timerInterval","current","restart","SET_RESTART","ReactDOM","createPortal","Game","initialState","rootReducer","combineReducers","action","store","createStore","App","path","exact","component","render","StrictMode"],"mappings":"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","file":"static/js/main.860500cf.chunk.js","sourcesContent":["enum UserTypes{\n    SET_USER=\"SET_USER\"\n}\n\nexport default UserTypes;","enum GameTypes {\n  SET_START = \"SET_START\",\n  SET_WRONG_PLACEMENT = \"SET_WRONG_PLACEMENT\",\n  SET_RESTART = \"SET_RESTART\",\n  SET_GAME_ENDED = \"SET_GAME_ENDED\"\n}\n\nexport default GameTypes;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../../redux/actions/userActions\";\nimport \"./Home.css\";\nimport Modal from \"../../components/modal/Modal\";\nconst Home = () => {\n  const history = useHistory();\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const dispatch = useDispatch();\n  const [modalVisible, setModalVisible] = useState(true);\n  \n\n  const handleClickEvent = (event: React.MouseEvent) => {\n    dispatch(setUser(inputValue));\n    history.push(\"/game\");\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let currentValue = event.currentTarget.value;\n    if (currentValue && currentValue !== \"\") {\n      setInputValue(event.currentTarget.value);\n    }else{\n\n    }\n  };\n\n  return (\n    <div className=\"content\">\n      <h5 className=\"title\">Hello friend, tell me your name...</h5>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={handleInput}\n        placeholder=\"Your name here\"\n      ></input>\n      <button className=\"button\" onClick={handleClickEvent}>\n        Let's go\n      </button>\n     \n    </div>\n  );\n};\nexport default Home;\n","import { UserActionReducerProps } from \"../reducers/userReducer\";\nimport UserTypes from \"../types/UserTypes\";\n\nexport const setUser = (userName: string): UserActionReducerProps => {\n  return {\n    type: UserTypes.SET_USER,\n    payload: userName,\n  };\n};\n\n","import { GameReducerProps } from \"../reducers/gameReducer\";\nimport GameTypes from \"../types/GameTypes\";\n\n\nexport const setGameStart = (): GameReducerProps => {\n  return {\n    type: GameTypes.SET_START,\n  };\n};\n\nexport const setWrongPlacementPenalty = (): GameReducerProps => {\n  return {\n    type: GameTypes.SET_WRONG_PLACEMENT,\n  };\n};\n\nexport const restartGame = (): GameReducerProps=>{\n  return {\n    type: GameTypes.SET_RESTART\n  }\n}\n\nexport const setGameEnded = ():GameReducerProps=>{\n  return {\n    type: GameTypes.SET_GAME_ENDED\n  }\n}\n","import { FC } from \"react\";\nimport IContainer from \"../../model/IContainer\";\nimport \"./Card.css\";\ntype CardProps = {\n  containerInformation: IContainer;\n  onDragStart: (event: React.DragEvent) => void;\n};\n\n/**\n * Draggable Card.\n * @param param0\n * @returns\n */\nconst Card: FC<CardProps> = ({ containerInformation, onDragStart }) => {\n  return (\n    <div\n      draggable\n      onDragStart={onDragStart}\n      onDragEnd={(event) => event.stopPropagation()}\n      className=\"card\"\n    >\n      {containerInformation?.image?.logo &&\n      containerInformation?.image?.logo !== \"\" ? (\n        <img\n          className=\"image\"\n          id={\n            containerInformation?.image?.id ||\n            `${containerInformation.htmlId}-img`\n          }\n          alt={containerInformation.image?.logo || \"image\"}\n          src={containerInformation?.image?.logo}\n        />\n      ) : null}\n    </div>\n  );\n};\n\n// const CardMemoizedCad = React.memo<CardProps>(Card);\n\nexport default Card;\n","import React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport IContainer from \"../../model/IContainer\";\nimport { setGameStart } from \"../../redux/actions/gameActions\";\nimport { GlobalStateDefinition } from \"../../redux/rootReducer\";\nimport \"./CardHolder.css\";\nimport Card from \"../card/Card\";\nimport { GameState } from \"../../redux/reducers/gameReducer\";\ntype CardProps = {\n  containerInformation: IContainer;\n  onItemDragged: (fromId: string, to: string) => void;\n};\n\n/**\n * Component to hold the images. It supports Drop\n * @param param0\n * @returns\n */\nconst CardHolder: React.FC<CardProps> = ({\n  containerInformation,\n  onItemDragged,\n}) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  // const imageRef = useRef<HTMLImageElement | null>(null);\n  const {started} = useSelector<GlobalStateDefinition>(\n    (state) => state.game\n  ) as GameState;\n  const dispatch = useDispatch();\n  const handleDragStart = (event: React.DragEvent) => {\n    if (!started) {\n      dispatch(setGameStart());\n    }\n    event.dataTransfer?.clearData();\n    event.dataTransfer?.setData(\n      \"originInformation\",\n      JSON.stringify(containerInformation)\n    );\n  };\n\n  const handleDrop = (event: React.DragEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    \n    if (containerInformation.htmlId.indexOf(\"source\") > -1) return;\n    let sourceContainer: IContainer;\n    try {\n      sourceContainer = JSON.parse(\n        event.dataTransfer?.getData(\"originInformation\") || \"\"\n      );\n      if(sourceContainer.type===\"source\" && containerInformation.image?.logo) return; \n      onItemDragged(sourceContainer.htmlId, containerInformation.htmlId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      id={containerInformation.htmlId}\n      className={`card-holder ${\n        !containerInformation?.image?.logo &&\n        containerInformation.type === \"destination\"\n          ? \"card-holder-empty\"\n          : null\n      }`}\n      onDrop={handleDrop}\n      onDragOver={(e) => e.preventDefault()}\n    >\n      {containerInformation?.image?.logo &&\n      containerInformation?.image?.logo !== \"\" ? (\n        <Card\n          containerInformation={containerInformation}\n          onDragStart={handleDragStart}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst MemoizedCardHolder = React.memo<CardProps>(CardHolder);\n\nexport default MemoizedCardHolder;\n","import MemoizedCard from \"../card-holder/CardHolder\";\nimport \"./List.css\";\nimport IContainer from \"../../model/IContainer\";\nimport React from \"react\";\n\ntype GameRowProps = {\n  items: Array<IContainer>;\n  onItemDragged: (fromHtmlId: string, toHtmlId: string) => void;\n};\n/**\n * This component renders a row with cards.\n * @param param0 \n * @returns \n */\nconst List: React.FC<GameRowProps> = ({ items, onItemDragged }) => {\n  return (\n    <div className=\"list\">\n      {items.map((item, index) => {\n        return (\n          <MemoizedCard\n            onItemDragged={onItemDragged}\n            key={item.htmlId}\n            containerInformation={item}\n          ></MemoizedCard>\n        );\n      })}\n    </div>\n  );\n};\n\nconst MemoizedList = React.memo(List);\nexport default MemoizedList;\n","export default __webpack_public_path__ + \"static/media/zoovu-o.7105c72a.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-u.ab636cad.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-v.82f0d0a7.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-z.045ec7e2.svg\";","import React, { useEffect } from \"react\";\nimport MemoizedList from \"../list/List\";\nimport { IDraggableItem } from \"../../model/IDraggableItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setGameEnded,\n  setWrongPlacementPenalty,\n} from \"../../redux/actions/gameActions\";\nimport useRandomSortedData from \"../../hooks/useRandomSortedData\";\nimport { GlobalStateDefinition } from \"../../redux/rootReducer\";\nimport { GameState } from \"../../redux/reducers/gameReducer\";\nimport \"./GameContainer.css\";\n/**\n * Container to hold the draggable area.\n * @returns\n */\nconst GameContainer = () => {\n  const dispatch = useDispatch();\n  const { gameEnded } = useSelector<GlobalStateDefinition>(\n    (state) => state.game\n  ) as GameState;\n  const {\n    source: sourceList,\n    setSource: setSourceList,\n    destination,\n    setDestination,\n  } = useRandomSortedData(gameEnded === undefined ? false : gameEnded);\n  useEffect(() => {\n    if (destination) {\n      //Validates that all are placed correctly.\n      let list = destination.filter((item) => {\n        if (item.id === 2 || item.id === 3)\n          return item.image?.key === 2 || item.image?.key === 3;\n        return item.id === item.image?.key;\n      });\n\n      if (list.length === 5) {\n        dispatch(setGameEnded());\n      }\n    }\n    return () => {};\n  }, [destination]);\n  /**\n   * After an image/card is dropped, we trigger this event to\n   * re-order the lists\n   * @param fromHtmlId id where the card comes from.\n   * @param toHtmlId  id where the card goes to.\n   * @returns\n   */\n  const onItemDragged = (fromHtmlId: string, toHtmlId: string) => {\n    if (fromHtmlId === toHtmlId) return;\n    let fromOrigin: boolean = true;\n    let sourceIndex: number = sourceList.findIndex(\n      (item) => item.htmlId === fromHtmlId\n    );\n    fromOrigin = sourceIndex > -1;\n    let destinationIndex: number = destination.findIndex(\n      (item) => item.htmlId === toHtmlId\n    );\n    //Check if the image comes from the draggable area.\n    if (fromOrigin) {\n      let image = { ...sourceList[sourceIndex].image };\n      let destinationOldImage: IDraggableItem = {\n        ...destination[destinationIndex].image,\n      };\n      setDestination((value) => {\n        let newDestination = [...value];\n        newDestination[destinationIndex].image = image;\n        return newDestination;\n      });\n      if (image?.key) {\n        if (!isCorrectPlacement(image.key, destinationIndex))\n          dispatch(setWrongPlacementPenalty());\n      }\n      setSourceList((value) => {\n        let newSource = [...value];\n        newSource[sourceIndex].image = destinationOldImage;\n        return newSource;\n      });\n    } else {\n      //Enters here if the cards are being re-ordered after being dropped.\n      sourceIndex = destination.findIndex((item) => item.htmlId === fromHtmlId);\n      let image = { ...destination[sourceIndex].image };\n      let destinationOldImage: IDraggableItem = {\n        ...destination[destinationIndex].image,\n      };\n      if (image?.key) {\n        if (!isCorrectPlacement(image.key, destinationIndex))\n          dispatch(setWrongPlacementPenalty());\n      }\n\n      setDestination((value) => {\n        let newDestination = [...value];\n        newDestination[destinationIndex].image = image;\n        newDestination[sourceIndex].image = destinationOldImage;\n        return newDestination;\n      });\n    }\n  };\n\n  const isCorrectPlacement = (\n    imageIndex: number,\n    containerIndex: number\n  ): boolean => {\n    //O letters can be placed in 2 or 3\n    if (\n      destination[containerIndex].id === 2 ||\n      destination[containerIndex].id === 3\n    ) {\n      return imageIndex === 2 || imageIndex === 3;\n    }\n\n    return destination[containerIndex].id === imageIndex;\n  };\n  return (\n    <>\n      <label className=\"label-message\">pick an item from here</label>\n      <MemoizedList onItemDragged={onItemDragged} items={sourceList} />\n      <label className=\"label-message\">Then drag it here</label>\n      <MemoizedList onItemDragged={onItemDragged} items={destination} />\n    </>\n  );\n};\nexport default GameContainer;\n","import { useEffect, useState } from \"react\";\nimport { letterO, letterU, letterV, letterZ } from \"../images\";\nimport IContainer from \"../model/IContainer\";\n\n\n/**\n * Custom hook to generate 2 lists.\n * Source: This holds the initial cards (with the letters of the logo).\n * Destination: This is the final placement of the cards.\n * It has a random sort for the initial data.\n *\n * @returns A pair of two state properties to allow modification of these list.\n */\nexport default function useRandomSortedData(gameEnded: boolean) {\n  const [source, setSource] = useState<IContainer[]>([]);\n  const [destination, setDestination] =\n    useState<IContainer[]>([]);\n  console.log(\"Game ended\", gameEnded);\n  useEffect(() => {\n    if (!gameEnded) {\n      console.log(\"Game ended here\");\n      const randomSort = (list: IContainer[]) => {\n        return [\n          ...list.sort(() => {\n            return Math.random() - 0.5;\n          }),\n        ];\n      };\n\n      const initialDataTarget: Array<IContainer> = [\n        { id: 1, htmlId: \"empty-1-z\", type: \"destination\" },\n        { id: 2, htmlId: \"empty-2-o\", type: \"destination\" },\n        { id: 3, htmlId: \"empty-3-o\", type: \"destination\" },\n        { id: 4, htmlId: \"empty-4-v\", type: \"destination\" },\n        { id: 5, htmlId: \"empty-5-u\", type: \"destination\" },\n      ];\n      \n      let gameItemDataLogo = randomSort([\n        {\n          htmlId: \"source-1\",\n          id: 1,\n          type: \"source\",\n          image: { key: 1, id: \"logo-1\", logo: letterZ },\n        },\n        {\n          htmlId: \"source-2\",\n          id: 2,\n          type: \"source\",\n          image: { key: 2, id: \"logo-2\", logo: letterO },\n        },\n        {\n          htmlId: \"source-3\",\n          id: 3,\n          type: \"source\",\n          image: { key: 3, id: \"logo-3\", logo: letterO },\n        },\n        {\n          htmlId: \"source-4\",\n          id: 4,\n          type: \"source\",\n          image: { key: 4, id: \"logo-4\", logo: letterV },\n        },\n        {\n          htmlId: \"source-5\",\n          id: 5,\n          type: \"source\",\n          image: { key: 5, id: \"logo-5\", logo: letterU },\n        },\n      ]);\n      setSource(gameItemDataLogo);\n      setDestination([...initialDataTarget]);\n    }\n  }, [gameEnded]);\n\n  return { source, setSource, destination, setDestination };\n}\n","import { FC, useEffect, useState } from \"react\";\nimport \"./Modal.css\";\n\ntype ModalProps = {\n  open: boolean;\n  onClose: () => void;\n  message?: string;\n  title?: string;\n};\n\nconst Modal: FC<ModalProps> = ({\n  open,\n  onClose,\n  title,\n  message,\n  children,\n  // autoCloseTimeout = 3000,\n}) => {\n  const [autoCloseTimeout, setAutoCloseTimeout] = useState<any>();\n  useEffect(() => {\n    if (open) {\n      let timeout = setTimeout(() => {\n        onClose();\n      }, 10000);\n      setAutoCloseTimeout(timeout);\n    } else {\n      clearTimeout(autoCloseTimeout);\n    }\n    return () => {\n      if (autoCloseTimeout) {\n        clearTimeout(autoCloseTimeout);\n      }\n    };\n  }, [open]);\n\n  return (\n    <>\n      {open ? (\n        <div className=\"modal\">\n          <div className=\"modal-header\">\n            <label>{title}</label>\n          </div>\n          <div className=\"modal-content\">\n            {children}\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              onClick={() => {\n                onClose();\n              }}\n              className=\"button\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { restartGame } from \"../../redux/actions/gameActions\";\nimport { GameState } from \"../../redux/reducers/gameReducer\";\nimport { GlobalStateDefinition } from \"../../redux/rootReducer\";\nimport Modal from \"../modal/Modal\";\nimport \"./Header.css\";\n\nconst modalRoot = document.getElementById(\"modal-dialog\") as HTMLDivElement;\n\nconst Header = () => {\n  const name = useSelector<GlobalStateDefinition>(\n    (state) => state.user.name\n  ) as string;\n  const { started, wrongPlacement, gameEnded } =\n    useSelector<GlobalStateDefinition>((state) => state.game) as GameState;\n  const [time, setTime] = useState(0);\n  const [timeInterval, setTimeInterval] = useState<any>();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let timerInterval: any;\n    if (started) {\n      if (!timeInterval) {\n        let interval = setInterval(() => {\n          setTime((currrent) => currrent + 1);\n        }, 1000);\n        setTimeInterval(interval);\n      }\n    } else {\n      if (timeInterval) {\n        try {\n          clearInterval(timeInterval);\n        } catch (error) {}\n      }\n    }\n    return () => {\n      try {\n        clearInterval(timerInterval);\n      } catch (error) {}\n    };\n  }, [started, timeInterval]);\n\n  //Wrong placement\n  useEffect(() => {\n    if (wrongPlacement > 0) {\n      setTime((current) => current + 10);\n    }\n  }, [wrongPlacement]);\n\n  const restart = () => {\n    dispatch(restartGame());\n    setTime(0);\n    setTimeInterval(null);\n  };\n  return (\n    <header className=\"header\">\n      <label className=\"name\">Good luck, {name}</label>\n      <div className=\"timer\">Your score: {time} seconds</div>\n      {modalRoot\n        ? ReactDOM.createPortal(\n            <Modal\n              title=\"Congratulations!!\"\n              open={(gameEnded!==undefined && gameEnded)||false}\n              onClose={() => restart()}\n            >\n              <div className=\"message-container\">\n                <label>You have made our logo great again!</label>\n                <label className=\"score\">Score: {time} seconds</label>\n              </div>\n            </Modal>,\n            modalRoot\n          )\n        : null}\n    </header>\n  );\n};\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport GameContainer from \"../../components/game-container/GameContainer\";\nimport Header from \"../../components/header/Header\";\nimport { GlobalStateDefinition } from \"../../redux/rootReducer\";\nimport './Game.css';\n\nconst Game = () => {\n  const history = useHistory();\n  const name = useSelector<GlobalStateDefinition>(\n    (state) => state.user.name\n  ) as string;\n  useEffect(() => {\n    if (!name) {\n        history.push(\"/\");\n    }\n  }, [name, history]);\n  return (\n    <>\n      <div className=\"container\">\n        <Header></Header>\n        <GameContainer></GameContainer>\n      </div>\n    </>\n  );\n};\nexport default Game;\n","import GameTypes from \"../types/GameTypes\";\n\nexport type GameState = {\n  started: boolean;\n  wrongPlacement: number;\n  gameEnded?: boolean;\n};\nexport type GameReducerProps = {\n  type: GameTypes;\n  payload?: any;\n};\n\nconst initialState: GameState = { started: false, wrongPlacement: 0 };\n\nexport default function gameReducer(\n  state: GameState = initialState,\n  action: GameReducerProps\n) {\n  switch (action.type) {\n    case GameTypes.SET_START:\n      return { ...state, started: true, gameEnded: false };\n    case GameTypes.SET_WRONG_PLACEMENT:\n      return { ...state, wrongPlacement: state.wrongPlacement + 1 };\n    case GameTypes.SET_RESTART:\n      return { ...initialState };\n    case GameTypes.SET_GAME_ENDED:\n      return { ...state, gameEnded: true, started: false };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userReducer, { UserState } from \"./reducers/userReducer\";\nimport gameReducer, { GameState } from \"./reducers/gameReducer\";\nexport interface GlobalStateDefinition {\n  user: UserState;\n  game: GameState;\n}\nconst rootReducer = combineReducers<GlobalStateDefinition>({\n  user: userReducer,\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import UserTypes from \"../types/UserTypes\";\n\nexport type UserState = { name: string };\nexport type UserActionReducerProps = {\n  type: UserTypes;\n  payload: any;\n};\n\nexport default function userReducer(\n  state: UserState = { name: \"\" },\n  action: UserActionReducerProps\n) {\n  switch (action.type) {\n    case UserTypes.SET_USER:\n      return { ...state, name: action.payload };\n    default:\n      return { ...state };\n  }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n// import {composeWithDevTools} from 'redux-devtools-extension';\n\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { Switch, Route } from \"react-router\";\nimport Home from \"./pages/home/Home\";\nimport Game from \"./pages/game/Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport './App.css'\nfunction App() {\n  console.log(\"entered\");\n  return (\n\n    <Provider store={store}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/start\" exact component={Home} />\n        <Route path=\"/game\" exact component={Game} />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}